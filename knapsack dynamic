def knapsack(capacity, weights, values, n):
    # Initialize a table to store the maximum value that can be achieved
    # with i items and a capacity of j
    dp = [[0 for _ in range(capacity + 1)] for _ in range(n + 1)]

    # Build dp table
    for i in range(1, n + 1):
        for j in range(1, capacity + 1):
            if weights[i - 1] <= j:
                dp[i][j] = max(values[i - 1] + dp[i - 1][j - weights[i - 1]], dp[i - 1][j])
            else:
                dp[i][j] = dp[i - 1][j]

    return dp[n][capacity]

# Example usage:
values = [60, 100, 120]
weights = [10, 20, 30]
capacity = 50
n = len(values)

max_value = knapsack(capacity, weights, values, n)
print("Maximum value that can be obtained:", max_value)
